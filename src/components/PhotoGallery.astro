---
export interface Props {
  images: string[];
  basePath?: string;
}

const { images, basePath = "/images/meetings" } = Astro.props;
---

<div class="photo-gallery" id="photo-gallery">
  {images.map((image, index) => (
    <img 
      src={`${basePath}/${image}`} 
      alt={`Meeting photo ${index + 1}`}
      loading="lazy"
      onclick={`openLightbox(${index})`}
      class="gallery-image"
    />
  ))}
</div>

{images.length === 0 && (
  <div class="no-photos">
    <p>ðŸ“· Photos from this meeting will be added soon!</p>
  </div>
)}

<!-- Lightbox Modal -->
<div id="lightbox-modal" class="lightbox-modal" onclick="closeLightbox(event)">
  <div class="lightbox-content">
    <span class="lightbox-close" onclick="closeLightbox()">&times;</span>
    <img id="lightbox-image" src="" alt="Lightbox image" />
    <div class="lightbox-nav">
      <button id="prev-btn" onclick="changeImage(-1)" class="nav-button">&#8249;</button>
      <button id="next-btn" onclick="changeImage(1)" class="nav-button">&#8250;</button>
    </div>
  </div>
</div>

<style>
  .photo-gallery {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
    gap: 10px;
    margin: 20px 0;
  }

  .gallery-image {
    width: 100%;
    height: 150px;
    object-fit: cover;
    border-radius: 4px;
    cursor: pointer;
    transition: transform 0.2s;
  }

  .gallery-image:hover {
    transform: scale(1.05);
  }

  .no-photos {
    text-align: center;
    padding: 40px 20px;
    background: #f8f9fa;
    border-radius: 8px;
    color: #666;
    margin: 20px 0;
  }

  .no-photos p {
    margin: 0;
    font-size: 1.1em;
  }

  .lightbox-modal {
    display: none;
    position: fixed;
    z-index: 1000;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.9);
  }

  .lightbox-content {
    position: relative;
    margin: auto;
    display: block;
    max-width: 90%;
    max-height: 80%;
    top: 50%;
    transform: translateY(-50%);
  }

  #lightbox-image {
    width: 100%;
    height: auto;
    max-height: 80vh;
    object-fit: contain;
  }

  .lightbox-close {
    position: absolute;
    top: -40px;
    right: 0;
    color: #fff;
    font-size: 35px;
    font-weight: bold;
    cursor: pointer;
    z-index: 1001;
  }

  .lightbox-close:hover {
    opacity: 0.7;
  }

  .lightbox-nav {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    width: 100%;
    display: flex;
    justify-content: space-between;
    pointer-events: none;
  }

  .nav-button {
    background: rgba(255, 255, 255, 0.2);
    border: none;
    color: white;
    font-size: 24px;
    padding: 10px 15px;
    cursor: pointer;
    border-radius: 4px;
    transition: background 0.2s;
    pointer-events: auto;
  }

  .nav-button:hover {
    background: rgba(255, 255, 255, 0.4);
  }

  @media (max-width: 600px) {
    .photo-gallery {
      grid-template-columns: 1fr;
      gap: 15px;
    }

    .gallery-image {
      height: 200px;
    }

    .lightbox-content {
      max-width: 95%;
      max-height: 70%;
    }

    .nav-button {
      font-size: 20px;
      padding: 8px 12px;
    }
  }
</style>

<script define:vars={{ images, basePath }}>
  let currentImageIndex = 0;

  function openLightbox(index) {
    currentImageIndex = index;
    const modal = document.getElementById('lightbox-modal');
    const img = document.getElementById('lightbox-image');
    
    if (images && images.length > 0) {
      img.src = `${basePath}/${images[index]}`;
      modal.style.display = 'block';
      document.body.style.overflow = 'hidden';
    }
  }

  function closeLightbox(event) {
    if (!event || event.target.id === 'lightbox-modal' || event.target.classList.contains('lightbox-close')) {
      const modal = document.getElementById('lightbox-modal');
      modal.style.display = 'none';
      document.body.style.overflow = 'auto';
    }
  }

  function changeImage(direction) {
    if (!images || images.length === 0) return;
    
    currentImageIndex += direction;
    
    if (currentImageIndex >= images.length) {
      currentImageIndex = 0;
    } else if (currentImageIndex < 0) {
      currentImageIndex = images.length - 1;
    }
    
    const img = document.getElementById('lightbox-image');
    img.src = `${basePath}/${images[currentImageIndex]}`;
  }

  // Keyboard navigation
  document.addEventListener('keydown', function(event) {
    const modal = document.getElementById('lightbox-modal');
    if (modal.style.display === 'block') {
      if (event.key === 'Escape') {
        closeLightbox();
      } else if (event.key === 'ArrowLeft') {
        changeImage(-1);
      } else if (event.key === 'ArrowRight') {
        changeImage(1);
      }
    }
  });

  // Make functions globally available
  window.openLightbox = openLightbox;
  window.closeLightbox = closeLightbox;
  window.changeImage = changeImage;
</script>