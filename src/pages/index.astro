---
import Layout from '../components/Layout.astro';
import NextMeetingBanner from '../components/NextMeetingBanner.astro';
import { getCollection } from 'astro:content';
import fs from 'fs';
import path from 'path';

const blogPosts = await getCollection('blog', ({ data }) => {
  return data.draft !== true;
});
const meetings = await getCollection('meetings');
const newsletters = await getCollection('newsletter', ({ data }) => {
  return data.draft !== true;
});

// Helper function to get file modification time
function getFileModTime(filePath: string): Date {
  try {
    const stats = fs.statSync(filePath);
    return stats.mtime;
  } catch (error) {
    // Fallback to current time if file not found
    return new Date();
  }
}

// Combine blog posts, meetings, and newsletters, adding a type field and modification time
const allContent = [
  ...blogPosts.map(post => ({
    ...post,
    type: 'blog',
    url: `/blog/${post.slug}/`,
    modTime: getFileModTime(path.join(process.cwd(), 'src', 'content', 'blog', `${post.id}.md`))
  })),
  ...meetings.map(meeting => ({
    ...meeting,
    type: 'meeting',
    url: `/meetings/${meeting.slug}/`,
    modTime: getFileModTime(path.join(process.cwd(), 'src', 'content', 'meetings', `${meeting.id}.md`))
  })),
  ...newsletters.map(newsletter => ({
    ...newsletter,
    type: 'newsletter',
    url: `/newsletters/${newsletter.slug}/`,
    modTime: getFileModTime(path.join(process.cwd(), 'src', 'content', 'newsletter', `${newsletter.id}.mdx`))
  }))
];

// Smart ordering: Only show past/completed content, prioritize by what actually happened most recently
function createSmartOrdering(content: any[]) {
  const now = new Date();
  
  // Filter to only show past/completed content
  const pastContent = content.filter(item => {
    const itemDate = new Date(item.data.date);
    return itemDate <= now; // Only show content from today or earlier
  });
  
  // Separate content types (already filtered to past only)
  const newsletters = pastContent.filter(item => item.type === 'newsletter')
    .sort((a, b) => new Date(b.data.date).getTime() - new Date(a.data.date).getTime());
  const meetings = pastContent.filter(item => item.type === 'meeting')
    .sort((a, b) => new Date(b.data.date).getTime() - new Date(a.data.date).getTime());
  const blogs = pastContent.filter(item => item.type === 'blog')
    .sort((a, b) => new Date(b.data.date).getTime() - new Date(a.data.date).getTime());

  const smartOrder = [];
  
  // For each newsletter, add it and find the closest meeting
  newsletters.forEach(newsletter => {
    smartOrder.push(newsletter);
    
    // Find meeting that's closest in date to this newsletter
    const newsletterDate = new Date(newsletter.data.date);
    let closestMeeting = null;
    let closestDistance = Infinity;
    
    meetings.forEach(meeting => {
      const meetingDate = new Date(meeting.data.date);
      const distance = Math.abs(meetingDate.getTime() - newsletterDate.getTime());
      
      // Prefer meetings that are on or before the newsletter date (meetings that the newsletter reports on)
      const isPriorMeeting = meetingDate <= newsletterDate;
      const adjustedDistance = isPriorMeeting ? distance : distance * 2; // Favor prior meetings
      
      if (adjustedDistance < closestDistance && !smartOrder.includes(meeting)) {
        closestMeeting = meeting;
        closestDistance = adjustedDistance;
      }
    });
    
    if (closestMeeting) {
      smartOrder.push(closestMeeting);
    }
  });
  
  // Add any remaining meetings not already included
  meetings.forEach(meeting => {
    if (!smartOrder.includes(meeting)) {
      smartOrder.push(meeting);
    }
  });
  
  // Add any blog posts
  blogs.forEach(blog => {
    smartOrder.push(blog);
  });
  
  return smartOrder;
}

// For now, let's just show the most recent past content first (simple approach)
const recentContent = allContent
  .filter(item => {
    // Always reparse dates to ensure Pacific time handling
    const dateStr = item.data.date instanceof Date 
      ? item.data.date.toISOString().split('T')[0]  // Convert Date back to YYYY-MM-DD
      : item.data.date;
    const itemDate = new Date(`${dateStr}T12:00:00-07:00`); // Parse as noon Pacific Time
    const now = new Date();
    return itemDate <= now; // Only show past/completed content
  })
  .sort((a: any, b: any) => {
    const aDateStr = a.data.date instanceof Date ? a.data.date.toISOString().split('T')[0] : a.data.date;
    const bDateStr = b.data.date instanceof Date ? b.data.date.toISOString().split('T')[0] : b.data.date;
    const aDate = new Date(`${aDateStr}T12:00:00-07:00`);
    const bDate = new Date(`${bDateStr}T12:00:00-07:00`);
    return bDate.getTime() - aDate.getTime();
  })
  .slice(0, 4);
---

<Layout title="Piedmont Makers Club FLL Challenge Team" description="Welcome to our FIRST Lego League team website! Follow our journey through the FLL UNEARTHED‚Ñ¢ season with meeting notes, robot builds, and competition preparations." showSidebar={false}>
  <div class="landing-page">
    <!-- Next Meeting Banner -->
    <NextMeetingBanner />
    
    <!-- Hero Section -->
    <section class="hero">
      <div class="hero-content">
        <h1 class="hero-title">LOOTING LLAMAS</h1>
        <p class="hero-subtitle">Piedmont Makers Club</p>
        <p class="hero-description">
          Welcome to our FIRST Lego League Challenge Team website! Follow our journey 
          through the FLL UNEARTHED‚Ñ¢ season as we build, code, and compete.
        </p>
        <hr class="hero-rule" />
        <div class="hero-actions">
          <a href="/newsletters" class="btn btn-primary">Newsletters</a>
          <a href="/meeting-plans" class="btn btn-primary">Meetings</a>
          <a href="/resources" class="btn btn-primary">Resources</a>
          <a href="/calendar" class="btn btn-primary">Calendar</a>
        </div>
      </div>
    </section>

    <!-- Latest Updates Section -->
    <section class="demo-section" id="latest">
      <div class="container">
        <h2 class="section-title">Latest Updates</h2>
        <p class="demo-description">
          Stay up-to-date with our team's progress through the FLL season, including 
          recent meeting notes, blog posts, and important announcements.
        </p>
        
        {recentContent.length > 0 && (
          <div class="recent-content-grid">
            {recentContent.map(item => (
              <article class="demo-post-card">
                <div class="content-type-badge">
                  {item.type === 'blog' ? 'üìù Blog Post' : 
                   item.type === 'meeting' ? 'üìÖ Meeting Notes' : 
                   'üìß Newsletter'}
                </div>
                
                <h3 class="demo-post-title">
                  <a href={item.url}>{item.data.title}</a>
                </h3>
                
                <div class="demo-post-meta">
                  <time class="demo-post-date" datetime={item.data.date}>
                    {(() => {
                      // Always reparse dates to ensure Pacific time handling
                      const dateStr = item.data.date instanceof Date 
                        ? item.data.date.toISOString().split('T')[0]  // Convert Date back to YYYY-MM-DD
                        : item.data.date;
                      
                      let dateObj = new Date(`${dateStr}T12:00:00-07:00`); // Parse as noon Pacific Time to avoid date shifts
                      
                      // Check if date is valid
                      if (isNaN(dateObj.getTime())) {
                        return 'Invalid date';
                      }
                      
                      return dateObj.toLocaleDateString('en-US', {
                        weekday: 'short',
                        year: 'numeric',
                        month: 'long',
                        day: 'numeric',
                        timeZone: 'America/Los_Angeles' // Force Pacific Time display
                      });
                    })()}
                  </time>
                </div>
                
                {item.data.description && (
                  <p class="demo-post-excerpt">{item.data.description}</p>
                )}
                
                {item.type === 'meeting' && item.data.agenda && (
                  <div class="meeting-preview">
                    <p class="agenda-count">üìÖ {item.data.agenda.length} agenda items</p>
                    {item.data.photos && item.data.photos.length > 0 && (
                      <p class="photo-count">üì∑ {item.data.photos.length} photos</p>
                    )}
                  </div>
                )}
              </article>
            ))}
          </div>
        )}
        
        <div class="demo-actions">
          <a href="/newsletters" class="btn btn-primary">View Newsletters</a>
          <a href="/meeting-plans" class="btn btn-primary">All Meetings</a>
          <a href="/blog" class="btn btn-secondary">View All Posts</a>
        </div>
      </div>
    </section>

    <!-- About Our Team Section -->
    <section class="features" id="features">
      <div class="container">
        <h2 class="section-title">About Our Team</h2>
        <div class="features-grid">
          <div class="feature-card">
            <h3 class="feature-title">FLL UNEARTHED‚Ñ¢</h3>
            <p class="feature-description">This season's challenge focuses on energy exploration and innovation. We'll design solutions to power the future.</p>
          </div>
          <div class="feature-card">
            <h3 class="feature-title">Robot Design</h3>
            <p class="feature-description">Building and programming LEGO robots to complete challenging missions on the FLL game board.</p>
          </div>
          <div class="feature-card">
            <h3 class="feature-title">Innovation Project</h3>
            <p class="feature-description">Researching and developing solutions to real-world energy challenges facing our community.</p>
          </div>
          <div class="feature-card">
            <h3 class="feature-title">Core Values</h3>
            <p class="feature-description">Discovery, Innovation, Impact, Inclusion, Teamwork, and Fun - the foundation of everything we do.</p>
          </div>
          <div class="feature-card">
            <h3 class="feature-title">Competition Ready</h3>
            <p class="feature-description">Preparing for regional tournaments with strategy, practice, and teamwork every step of the way.</p>
          </div>
          <div class="feature-card">
            <h3 class="feature-title">Learning Together</h3>
            <p class="feature-description">Developing STEM skills, leadership abilities, and lifelong friendships through hands-on challenges.</p>
          </div>
        </div>
      </div>
    </section>

  </div>
</Layout>

<style>
  .landing-page {
    width: 100%;
  }

  .container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 var(--content-padding);
  }

  .hero {
    text-align: center;
    padding: calc(var(--grid-unit) * 12) 0 calc(var(--grid-unit) * 8);
    background: linear-gradient(135deg, var(--color-surface) 0%, var(--color-background) 100%);
  }

  .hero-content {
    max-width: 800px;
    margin: 0 auto;
    padding: 0 var(--content-padding);
  }

  .hero-title {
    font-family: var(--font-heading-primary);
    font-size: 4.5rem;
    font-weight: 700;
    color: var(--color-accent);
    text-transform: uppercase;
    letter-spacing: 0.15em;
    line-height: 0.9;
    margin-bottom: calc(var(--grid-unit) * 2);
  }

  .hero-subtitle {
    font-family: var(--font-heading-secondary);
    font-size: 1.5rem;
    font-weight: 700;
    color: var(--color-text-muted);
    text-transform: uppercase;
    letter-spacing: 0.2em;
    margin-bottom: calc(var(--grid-unit) * 3);
  }

  .hero-description {
    font-size: 1.375rem;
    line-height: 1.6;
    color: var(--color-text-primary);
    margin-bottom: calc(var(--grid-unit) * 4);
    max-width: 600px;
    margin-left: auto;
    margin-right: auto;
  }

  .hero-rule {
    height: 6px;
    background-color: var(--color-accent);
    border: none;
    width: 150px;
    margin: 0 auto calc(var(--grid-unit) * 4);
  }

  .hero-actions {
    display: flex;
    gap: calc(var(--grid-unit) * 2);
    justify-content: center;
    flex-wrap: wrap;
  }

  .btn {
    font-family: var(--font-heading-secondary);
    font-weight: 700;
    text-transform: uppercase;
    letter-spacing: 0.05em;
    padding: calc(var(--grid-unit) * 1.5) calc(var(--grid-unit) * 3);
    border-radius: 4px;
    transition: all 0.3s ease;
    text-decoration: none;
    display: inline-block;
    font-size: 0.95rem;
  }

  .btn-primary {
    background-color: var(--color-accent);
    color: white;
    border: 2px solid var(--color-accent);
  }

  .btn-primary:hover,
  .btn-primary:focus {
    background-color: transparent;
    color: var(--color-accent);
    transform: translateY(-2px);
  }

  .btn-secondary {
    background-color: transparent;
    color: var(--color-text-primary);
    border: 2px solid var(--color-border);
  }

  .btn-secondary:hover,
  .btn-secondary:focus {
    background-color: var(--color-text-primary);
    color: var(--color-background);
    transform: translateY(-2px);
  }

  /* Dark mode button styles */
  :global([data-theme="dark"]) .btn-primary {
    background-color: var(--color-accent);
    color: white;
    border-color: var(--color-accent);
  }

  :global([data-theme="dark"]) .btn-primary:hover,
  :global([data-theme="dark"]) .btn-primary:focus {
    background-color: transparent;
    color: var(--color-accent);
  }

  :global([data-theme="dark"]) .btn-secondary {
    background-color: transparent;
    color: var(--color-text-primary);
    border-color: var(--color-border);
  }

  :global([data-theme="dark"]) .btn-secondary:hover,
  :global([data-theme="dark"]) .btn-secondary:focus {
    background-color: var(--color-accent);
    color: white;
    border-color: var(--color-accent);
  }

  .features {
    padding: calc(var(--grid-unit) * 8) 0;
  }

  .section-title {
    font-family: var(--font-heading-secondary);
    font-size: 2.5rem;
    font-weight: 900;
    color: var(--color-accent);
    text-transform: uppercase;
    letter-spacing: 0.1em;
    margin-bottom: calc(var(--grid-unit) * 6);
    text-align: center;
  }

  .features-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
    gap: calc(var(--grid-unit) * 4);
  }

  .feature-card {
    background-color: var(--color-surface);
    border: 1px solid var(--color-border);
    border-radius: 8px;
    padding: calc(var(--grid-unit) * 4);
    text-align: center;
    transition: transform 0.3s ease, border-color 0.3s ease;
  }

  .feature-card:hover {
    transform: translateY(-4px);
    border-color: var(--color-accent);
  }

  .feature-icon {
    font-size: 3rem;
    margin-bottom: calc(var(--grid-unit) * 2);
  }

  .feature-title {
    font-family: var(--font-heading-secondary);
    font-size: 1.25rem;
    font-weight: 700;
    color: var(--color-accent);
    text-transform: uppercase;
    letter-spacing: 0.05em;
    margin-bottom: calc(var(--grid-unit) * 1.5);
  }

  .feature-description {
    color: var(--color-text-secondary);
    line-height: 1.6;
    margin: 0;
  }

  /* Typography Showcase */
  .typography-showcase {
    padding: calc(var(--grid-unit) * 8) 0;
    background-color: var(--color-surface);
  }

  .typography-description {
    text-align: center;
    font-size: 1.125rem;
    color: var(--color-text-secondary);
    margin-bottom: calc(var(--grid-unit) * 6);
    max-width: 600px;
    margin-left: auto;
    margin-right: auto;
  }

  .typography-samples {
    display: grid;
    gap: calc(var(--grid-unit) * 6);
  }

  .type-sample {
    text-align: center;
    padding: calc(var(--grid-unit) * 4);
    background-color: var(--color-background);
    border: 1px solid var(--color-border);
    border-radius: 8px;
  }

  .sample-h1 {
    font-family: var(--font-heading-primary);
    font-size: 3.5rem;
    font-weight: 700;
    color: var(--color-accent);
    text-transform: uppercase;
    letter-spacing: 0.15em;
    line-height: 1.1;
    margin-bottom: calc(var(--grid-unit) * 2);
  }

  .sample-h2 {
    font-family: var(--font-heading-secondary);
    font-size: 2.5rem;
    font-weight: 700;
    color: var(--color-accent);
    text-transform: uppercase;
    letter-spacing: 0.1em;
    line-height: 1.2;
    margin-bottom: calc(var(--grid-unit) * 2);
  }

  .sample-body {
    font-family: var(--font-body);
    font-size: 1.125rem;
    line-height: 1.6;
    color: var(--color-text-primary);
    margin-bottom: calc(var(--grid-unit) * 2);
    max-width: 600px;
    margin-left: auto;
    margin-right: auto;
  }

  .sample-code {
    font-family: var(--font-mono);
    background-color: var(--color-surface);
    border: 1px solid var(--color-border);
    padding: calc(var(--grid-unit)) calc(var(--grid-unit) * 1.5);
    border-radius: 4px;
    display: inline-block;
    margin-bottom: calc(var(--grid-unit) * 2);
    color: var(--color-text-primary);
  }

  .type-meta {
    font-family: var(--font-mono);
    font-size: 0.85rem;
    color: var(--color-text-muted);
    text-transform: uppercase;
    letter-spacing: 0.05em;
    margin: 0;
  }

  .demo-section {
    padding: calc(var(--grid-unit) * 8) 0;
  }

  .demo-description {
    text-align: center;
    font-size: 1.125rem;
    line-height: 1.6;
    color: var(--color-text-secondary);
    margin-bottom: calc(var(--grid-unit) * 6);
    max-width: 600px;
    margin-left: auto;
    margin-right: auto;
  }

  .demo-posts {
    display: grid;
    gap: calc(var(--grid-unit) * 4);
    margin-bottom: calc(var(--grid-unit) * 6);
  }

  .demo-post-card {
    background-color: var(--color-surface);
    border: 1px solid var(--color-border);
    border-radius: 8px;
    padding: calc(var(--grid-unit) * 3);
    transition: transform 0.2s ease, border-color 0.2s ease;
  }

  .demo-post-card:hover {
    transform: translateY(-2px);
    border-color: var(--color-accent);
  }

  .demo-post-title {
    font-family: var(--font-heading-secondary);
    font-size: 1.5rem;
    font-weight: 700;
    margin-bottom: calc(var(--grid-unit));
  }

  .demo-post-title a {
    color: var(--color-text-primary);
    text-decoration: none;
  }

  .demo-post-title a:hover,
  .demo-post-title a:focus {
    color: var(--color-accent);
  }

  .demo-post-meta {
    display: flex;
    align-items: center;
    flex-wrap: wrap;
    gap: calc(var(--grid-unit));
    margin-bottom: calc(var(--grid-unit) * 1.5);
  }

  .demo-post-date {
    font-family: var(--font-mono);
    font-size: 0.85rem;
    color: var(--color-text-muted);
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }

  .demo-post-reading-time {
    font-family: var(--font-mono);
    font-size: 0.85rem;
    color: var(--color-text-muted);
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }

  .demo-post-reading-time::before {
    content: "‚Ä¢";
    margin: 0 calc(var(--grid-unit) / 2);
    color: var(--color-border);
  }

  .demo-post-excerpt {
    color: var(--color-text-secondary);
    line-height: 1.6;
    margin-bottom: calc(var(--grid-unit) * 2);
  }

  .demo-post-categories {
    display: flex;
    flex-wrap: wrap;
    gap: calc(var(--grid-unit) / 2);
  }

  .demo-category {
    background-color: var(--color-text-primary);
    color: white;
    padding: calc(var(--grid-unit) / 4) calc(var(--grid-unit) / 2);
    font-size: 0.75rem;
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 0.05em;
    border-radius: 2px;
  }

  /* Dark mode demo category styles */
  :global([data-theme="dark"]) .demo-category {
    background-color: var(--color-surface);
    color: var(--color-text-primary);
    border: 1px solid var(--color-border);
  }

  .demo-actions {
    text-align: center;
    gap: calc(var(--grid-unit) * 2);
    display: flex;
    justify-content: center;
    flex-wrap: wrap;
  }

  /* Recent Content Grid Layout */
  .recent-content-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: calc(var(--grid-unit) * 4);
    margin-bottom: calc(var(--grid-unit) * 6);
  }

  .content-type-badge {
    font-family: var(--font-mono);
    font-size: 0.8rem;
    color: var(--color-accent);
    text-transform: uppercase;
    letter-spacing: 0.05em;
    margin-bottom: calc(var(--grid-unit) * 2);
    font-weight: 600;
  }

  .meeting-preview {
    display: flex;
    flex-direction: column;
    gap: calc(var(--grid-unit) / 2);
  }

  .agenda-count,
  .photo-count {
    font-family: var(--font-mono);
    font-size: 0.8rem;
    color: var(--color-text-muted);
    text-transform: uppercase;
    letter-spacing: 0.05em;
    margin: 0;
  }

  @media (max-width: 768px) {
    .recent-content-grid {
      grid-template-columns: 1fr;
      gap: calc(var(--grid-unit) * 3);
    }
    
    .demo-actions {
      flex-direction: column;
      align-items: center;
    }
  }

  .installation {
    padding: calc(var(--grid-unit) * 8) 0;
    background-color: var(--color-surface);
  }

  .install-steps {
    display: grid;
    gap: calc(var(--grid-unit) * 4);
  }

  .step {
    display: grid;
    grid-template-columns: auto 1fr;
    gap: calc(var(--grid-unit) * 2);
    align-items: start;
  }

  .step-number {
    font-family: var(--font-heading-primary);
    font-size: 3rem;
    font-weight: 900;
    color: var(--color-accent);
    margin: 0;
  }

  .step-content {
    display: flex;
    flex-direction: column;
  }

  .step-title {
    font-family: var(--font-heading-secondary);
    font-size: 1.25rem;
    font-weight: 700;
    color: var(--color-text-primary);
    text-transform: uppercase;
    letter-spacing: 0.05em;
    margin-bottom: calc(var(--grid-unit));
  }

  .code-block {
    background-color: var(--color-text-primary);
    color: var(--color-background);
    padding: calc(var(--grid-unit) * 2);
    border-radius: 8px;
    overflow-x: auto;
    margin: 0;
  }

  .code-block code {
    font-family: var(--font-mono);
    background: none;
    border: none;
    color: inherit;
  }

  @media (max-width: 768px) {
    .hero-title {
      font-size: 3rem;
    }

    .hero-subtitle {
      font-size: 1.25rem;
    }

    .hero-description {
      font-size: 1.125rem;
    }

    .hero-actions {
      flex-direction: column;
      align-items: center;
    }

    .features-grid {
      grid-template-columns: 1fr;
    }

    .step {
      grid-template-columns: 1fr;
      text-align: center;
    }

    .step-number {
      font-size: 2rem;
    }
  }
</style>
