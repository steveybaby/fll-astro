---
import { getCollection } from 'astro:content';
import Layout from '../../components/Layout.astro';
import PhotoGallery from '../../components/PhotoGallery.astro';
import ModelCard from '../../components/ModelCard.astro';

export async function getStaticPaths() {
  const meetings = await getCollection('meetings');
  
  return meetings.map((meeting) => ({
    params: { slug: meeting.slug },
    props: { meeting },
  }));
}

const { meeting } = Astro.props;
const { Content } = await meeting.render();
const { data } = meeting;
/** data.date can be a Date or a 'YYYY-MM-DD' string */
const raw = data.date instanceof Date ? data.date : new Date(`${data.date}T00:00:00Z`);

// ISO date for <time datetime="YYYY-MM-DD">
const isoDate = new Intl.DateTimeFormat('en-CA', { timeZone: 'UTC' }).format(raw); // e.g., 2025-08-10

// Human-friendly, but still pinned to UTC
const display = new Intl.DateTimeFormat('en-US', {
  year: 'numeric',
  month: 'long',
  day: 'numeric',
  timeZone: 'UTC',
}).format(raw);
---

<Layout title={data.title} description={`Meeting notes from ${display}`} type="article" publishedTime={isoDate}>
  <article class="meeting-article">
    <header class="meeting-header">
      <h1>{data.title}</h1>
      <time datetime={isoDate}>{display}</time>

      <!-- <time datetime={data.date.toISOString()}>
        {data.date.toLocaleDateString('en-US', { 
          year: 'numeric', 
          month: 'long', 
          day: 'numeric' 
        })}
      </time> -->
    </header>

    <div class="meeting-content">
      <Content />
    </div>

    {data.assignments && data.assignments.length > 0 && (
      <ModelCard assignments={data.assignments} />
    )}

    {data.photos && data.photos.length > 0 && (
      <div class="meeting-photos">
        <h3>üì∑ Meeting Photos</h3>
        <PhotoGallery images={data.photos} basePath={`/images/meetings/${meeting.slug}`} />
      </div>
    )}
  </article>

  <nav class="meeting-nav">
    <a href="/meeting-plans/" class="back-link">‚Üê Back to All Meetings</a>
  </nav>
</Layout>

<style>
  .meeting-article {
    max-width: 800px;
    margin: 0 auto calc(var(--grid-unit) * 6) auto;
  }

  .meeting-header {
    margin-bottom: calc(var(--grid-unit) * 6);
  }

  .meeting-header h1 {
    font-family: var(--font-heading-primary);
    font-size: 3rem;
    font-weight: 900;
    color: var(--color-accent);
    text-transform: uppercase;
    letter-spacing: 0.05em;
    line-height: 1.1;
    margin: 0 0 calc(var(--grid-unit) * 3) 0;
  }

  .meeting-header time {
    font-family: var(--font-mono);
    font-size: 0.9rem;
    color: var(--color-text-muted);
    text-transform: uppercase;
    letter-spacing: 0.05em;
    margin-bottom: calc(var(--grid-unit) * 4);
    display: block;
  }

  /* Monumental Blood Red Rule */
  .meeting-header::after {
    content: "";
    height: 6px;
    background-color: var(--color-accent);
    border: none;
    margin: calc(var(--grid-unit) * 4) 0;
    width: 100%;
    display: block;
  }

  .meeting-content {
    font-size: 1.125rem;
    line-height: 1.7;
    margin-bottom: calc(var(--grid-unit) * 6);
  }

  .meeting-content :global(h1) {
    font-family: var(--font-heading-primary);
    font-size: 2.5rem;
    font-weight: 700;
    color: var(--color-text-primary);
    text-transform: uppercase;
    letter-spacing: 0.15em;
    margin-top: calc(var(--grid-unit) * 6);
    margin-bottom: calc(var(--grid-unit) * 3);
  }

  .meeting-content :global(h2) {
    font-family: var(--font-heading-secondary);
    font-size: 2rem;
    font-weight: 700;
    color: var(--color-text-primary);
    text-transform: uppercase;
    letter-spacing: 0.1em;
    margin-top: calc(var(--grid-unit) * 6);
    margin-bottom: calc(var(--grid-unit) * 3);
  }

  .meeting-content :global(h3) {
    font-family: var(--font-heading-secondary);
    font-size: 1.5rem;
    font-weight: 600;
    color: var(--color-text-primary);
    text-transform: uppercase;
    letter-spacing: 0.08em;
    margin-top: calc(var(--grid-unit) * 4);
    margin-bottom: calc(var(--grid-unit) * 2);
  }

  .meeting-content :global(ul),
  .meeting-content :global(ol) {
    margin-bottom: calc(var(--grid-unit) * 3);
    padding-left: calc(var(--grid-unit) * 3);
  }

  .meeting-content :global(li) {
    margin-bottom: calc(var(--grid-unit) / 2);
  }

  .meeting-content :global(p) {
    margin-bottom: calc(var(--grid-unit) * 3);
  }

  .meeting-content :global(strong) {
    font-weight: 600;
    color: var(--color-accent);
  }

  .meeting-content :global(em) {
    font-style: italic;
  }

  .meeting-photos {
    margin-top: calc(var(--grid-unit) * 6);
  }

  .meeting-photos h3 {
    font-family: var(--font-heading-secondary);
    font-size: 1.5rem;
    font-weight: 600;
    color: var(--color-text-primary);
    text-transform: uppercase;
    letter-spacing: 0.08em;
    margin: 0 0 calc(var(--grid-unit) * 3) 0;
  }

  .meeting-nav {
    border-top: 1px solid var(--color-border);
    padding-top: calc(var(--grid-unit) * 3);
    margin-top: calc(var(--grid-unit) * 6);
  }

  .back-link {
    font-family: var(--font-heading-secondary);
    font-weight: 700;
    text-transform: uppercase;
    letter-spacing: 0.05em;
    color: var(--color-accent);
    padding: calc(var(--grid-unit)) calc(var(--grid-unit) * 2);
    border: 2px solid var(--color-accent);
    border-radius: 4px;
    transition: all 0.2s ease;
    display: inline-block;
    text-decoration: none;
  }

  .back-link:hover,
  .back-link:focus {
    background-color: var(--color-accent);
    color: white;
    text-decoration: none;
  }

  @media (max-width: 768px) {
    .meeting-header h1 {
      font-size: 2.25rem;
    }
    
    .meeting-content {
      font-size: 1rem;
    }
    
    .meeting-content :global(h1) {
      font-size: 2rem;
    }
    
    .meeting-content :global(h2) {
      font-size: 1.75rem;
    }
    
    .meeting-content :global(h3) {
      font-size: 1.25rem;
    }
  }
</style>