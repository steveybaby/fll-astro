---
import Layout from '../components/Layout.astro';
---

<Layout title="Calculator - Measurement Converter" description="Convert real-world measurements to robot programming values">
  <div class="calculator-container">
    <header class="calculator-header">
      <h1>ðŸ§® Calculator</h1>
      <p>Convert real-world measurements to robot programming values</p>
      <p class="ratio-info">Ratio: 23mm real = 200mm robot</p>
    </header>

    <div class="calculator-form">
      <div class="input-group">
        <label for="real-measurement">Real-world measurement (mm):</label>
        <input 
          type="number" 
          id="real-measurement" 
          placeholder="Enter measurement in mm"
          step="0.1"
        />
      </div>

      <div class="result-group">
        <label for="robot-measurement">Robot programming value (mm):</label>
        <input 
          type="number" 
          id="robot-measurement" 
          readonly 
          placeholder="Calculated value will appear here"
        />
      </div>

      <button id="copy-result" class="copy-button" disabled>
        ðŸ“‹ Copy Result
      </button>
    </div>

    <div class="info-section">
      <h3>How it works:</h3>
      <ul>
        <li>Enter a real-world measurement in millimeters</li>
        <li>The calculator converts it using the ratio 23mm real = 200mm robot</li>
        <li>Use the converted value in your robot programming</li>
      </ul>
    </div>
  </div>
</Layout>

<style>
  .calculator-container {
    max-width: 600px;
    margin: 0 auto;
    padding: calc(var(--grid-unit) * 3);
  }

  .calculator-header {
    text-align: center;
    margin-bottom: calc(var(--grid-unit) * 4);
  }

  .calculator-header h1 {
    font-family: var(--font-heading-primary);
    font-size: 3rem;
    font-weight: 900;
    color: var(--color-accent);
    text-transform: uppercase;
    letter-spacing: 0.05em;
    line-height: 1.1;
    margin: 0 0 calc(var(--grid-unit) * 2) 0;
  }

  .calculator-header p {
    font-size: 1.125rem;
    color: var(--color-text-muted);
    margin: 0 0 calc(var(--grid-unit)) 0;
  }

  .ratio-info {
    font-family: var(--font-mono);
    font-size: 1rem;
    font-weight: 600;
    color: var(--color-accent);
    background: rgba(220, 38, 38, 0.1);
    padding: calc(var(--grid-unit));
    border-radius: 8px;
    border: 1px solid rgba(220, 38, 38, 0.3);
  }

  .calculator-form {
    background: var(--color-surface);
    border: 2px solid var(--color-border);
    border-radius: 12px;
    padding: calc(var(--grid-unit) * 3);
    margin-bottom: calc(var(--grid-unit) * 3);
  }

  .input-group,
  .result-group {
    margin-bottom: calc(var(--grid-unit) * 2);
  }

  .result-group {
    margin-bottom: calc(var(--grid-unit) * 3);
  }

  label {
    display: block;
    font-family: var(--font-heading-secondary);
    font-weight: 600;
    font-size: 0.9rem;
    color: var(--color-text-primary);
    margin-bottom: calc(var(--grid-unit) / 2);
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }

  input[type="number"] {
    width: 100%;
    padding: calc(var(--grid-unit) * 1.5);
    border: 2px solid var(--color-border);
    border-radius: 8px;
    font-family: var(--font-mono);
    font-size: 1.1rem;
    background: var(--color-background);
    color: var(--color-text-primary);
    transition: border-color 0.2s ease;
  }

  input[type="number"]:focus {
    outline: none;
    border-color: var(--color-accent);
  }

  input[type="number"]:readonly {
    background: rgba(34, 197, 94, 0.05);
    border-color: rgba(34, 197, 94, 0.3);
    color: var(--color-accent);
    font-weight: 600;
  }

  .copy-button {
    width: 100%;
    background: var(--color-accent);
    color: white;
    border: none;
    padding: calc(var(--grid-unit) * 1.5);
    border-radius: 8px;
    cursor: pointer;
    font-family: var(--font-heading-secondary);
    font-weight: 600;
    font-size: 1rem;
    text-transform: uppercase;
    letter-spacing: 0.05em;
    transition: all 0.2s ease;
  }

  .copy-button:hover:not(:disabled) {
    background: var(--color-text-primary);
    transform: translateY(-1px);
  }

  .copy-button:disabled {
    background: var(--color-border);
    cursor: not-allowed;
    transform: none;
  }

  .info-section {
    background: var(--color-surface);
    border: 1px solid var(--color-border);
    border-radius: 8px;
    padding: calc(var(--grid-unit) * 2);
  }

  .info-section h3 {
    font-family: var(--font-heading-secondary);
    font-size: 1.1rem;
    font-weight: 700;
    color: var(--color-text-primary);
    margin: 0 0 calc(var(--grid-unit)) 0;
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }

  .info-section ul {
    margin: 0;
    padding-left: calc(var(--grid-unit) * 2);
  }

  .info-section li {
    color: var(--color-text-muted);
    margin-bottom: calc(var(--grid-unit) / 2);
    line-height: 1.5;
  }

  @media (max-width: 768px) {
    .calculator-container {
      padding: calc(var(--grid-unit) * 2);
    }

    .calculator-header h1 {
      font-size: 2.5rem;
    }

    .calculator-form {
      padding: calc(var(--grid-unit) * 2);
    }
  }
</style>

<script>
  (function(){
    function Calculator() {
      this.realInput = document.getElementById('real-measurement');
      this.robotInput = document.getElementById('robot-measurement');
      this.copyButton = document.getElementById('copy-result');
      this.ratio = 200 / 23; // robot mm per real mm
      this.init();
    }

    Calculator.prototype.init = function() {
      var self = this;
      this.realInput.addEventListener('input', function() {
        self.calculate();
      });
      this.copyButton.addEventListener('click', function() {
        self.copyResult();
      });
    };

    Calculator.prototype.calculate = function() {
      var realValue = parseFloat(this.realInput.value);
      if (isNaN(realValue) || realValue <= 0) {
        this.robotInput.value = '';
        this.copyButton.disabled = true;
        return;
      }

      var robotValue = realValue * this.ratio;
      this.robotInput.value = Math.round(robotValue * 10) / 10; // Round to 1 decimal place
      this.copyButton.disabled = false;
    };

    Calculator.prototype.copyResult = function() {
      if (this.robotInput.value) {
        navigator.clipboard.writeText(this.robotInput.value).then(function() {
          // Visual feedback
          var originalText = this.copyButton.textContent;
          this.copyButton.textContent = 'âœ… Copied!';
          setTimeout(function() {
            this.copyButton.textContent = originalText;
          }.bind(this), 2000);
        }.bind(this)).catch(function() {
          // Fallback for older browsers
          this.robotInput.select();
          document.execCommand('copy');
          var originalText = this.copyButton.textContent;
          this.copyButton.textContent = 'âœ… Copied!';
          setTimeout(function() {
            this.copyButton.textContent = originalText;
          }.bind(this), 2000);
        }.bind(this));
      }
    };

    function init() { new Calculator(); }
    if (document.readyState === 'loading') {
      document.addEventListener('DOMContentLoaded', init);
    } else {
      init();
    }
  })();
</script>
</Layout>